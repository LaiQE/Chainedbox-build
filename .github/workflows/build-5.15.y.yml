#===============================================

# Description: 我家云 Armbian 编译脚本

# File name: Chainedbox-build.yml

# Lisence: MIT

# Author: WingonWu

# https://github.com/WingonWu/Chainedbox-build

#===============================================

name: Build Armbian For Chainedbox 5.15.y

on:

  # 在推送或拉取请求事件上触发工作流，但仅适用于主分支

  push:

    branches: [ master ]

  pull_request:

    branches: [ master ]

  # 允许您从“操作”选项卡手动运行此工作流

  repository_dispatch:

  workflow_dispatch:

    inputs:

      ssh:

        description: 'SSH 连接'

        required: false

        default: 'false'

      armbianboard:

        description: '设置机型： [ l1pro / chainedbox /rock64 ]'

        required: false

        default: 'chainedbox'

      armbianbranch:

        description: '设置版本分支： [ current / edge ]'

        required: false

        default: 'current'

      armbianrelease:

        description: '设置发布系统版本： [ buster / bullseye ]'

        required: false

        default: 'bullseye'

  schedule:

    - cron: '0 17 * * 0'

env:

  DELETE_RELEASE: true

  DELETE_ARTIFACTS: true

  KEEP_DAY: 30

  KEEP_MININUM_RUNS: 0

  KEEP_MININUM_RELEASE: 6

  TZ: Asia/Shanghai

jobs:

  build:

    runs-on: ubuntu-20.04

    if: github.event.repository.owner.id == github.event.sender.id

    steps:

    - name: Checkout

      uses: actions/checkout@v2

    - name: 初始化环境

      env:

        DEBIAN_FRONTEND: noninteractive

      run: |

        if [ -n "${{ github.event.inputs.armbianboard }}" ]; then

           ARMBIAN_BOARD=${{ github.event.inputs.armbianboard }}

        else

           ARMBIAN_BOARD=l1pro

        fi

        echo "ARMBIAN_BOARD=${ARMBIAN_BOARD}" >> $GITHUB_ENV

        

        if [ -n "${{ github.event.inputs.armbianbranch }}" ]; then

           ARMBIAN_BRANCH=${{ github.event.inputs.armbianbranch }}

        else

           ARMBIAN_BRANCH=current

        fi

        echo "ARMBIAN_BRANCH=${ARMBIAN_BRANCH}" >> $GITHUB_ENV

        

        if [ -n "${{ github.event.inputs.armbianrelease }}" ]; then

           ARMBIAN_RELEASE=${{ github.event.inputs.armbianrelease }}

        else

           ARMBIAN_RELEASE=bullseye

        fi

        echo "ARMBIAN_RELEASE=${ARMBIAN_RELEASE}" >> $GITHUB_ENV

        

        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc

        sudo -E apt-get -qq update

        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2004)

        sudo -E apt-get -qq autoremove --purge

        sudo -E apt-get -qq clean

        sudo timedatectl set-timezone "$TZ"

        sudo mkdir -p /workdir

        sudo chown $USER:$GROUPS /workdir

    - name: 下载源代码

      id: down

      run: |

        git clone --depth 1 https://github.com/armbian/build.git build

        #sudo cp -r ./config ./build

        #sudo cp -r ./userpatches ./build

    

    - name: SSH连接到 Actions @ Ctrl+C 确定, Ctrl+D 退出

      uses: P3TERX/ssh2actions@main

      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')

      env:

        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: 编译 Armbian for ${{ env.ARMBIAN_BOARD }}

      id: build

      run: |

        cd build/

        sudo chmod +x compile.sh

        sudo ./compile.sh  BOARD=${{ env.ARMBIAN_BOARD }} BRANCH=${{ env.ARMBIAN_BRANCH }}  RELEASE=${{ env.ARMBIAN_RELEASE }}  BUILD_MINIMAL=no BUILD_DESKTOP=no KERNEL_ONLY=no KERNEL_CONFIGURE=no COMPRESS_OUTPUTIMAGE=sha,img

        [ -e ./.config ] && cp -f ./.config ./output/images/.config

        echo "::set-output name=status::success"

    - name: 打包 Armbian [ ${{ env.ARMBIAN_BOARD }} ]

      id: rebuild

      if: steps.build.outputs.status == 'success'

      run: |

        # sudo chmod +x kernel.sh

        # sudo ./kernel.sh

        # 编辑镜像

        sudo chmod +x ./rebuild-5.15.y.sh

        sudo ./rebuild-5.15.y.sh

        echo "镜像编辑完成"

        cd ./build/output/images/ && sudo gzip *.img

        echo "FILEPATH=$PWD" >> $GITHUB_ENV

        echo "FILE_DATE=$(date +"%Y.%m.%d.%H%M")" >> $GITHUB_ENV

        echo "::set-output name=status::success"

    - name: 上传 Armbian 镜像到 Actions

      uses: kittaakos/upload-artifact-as-is@master

      if: steps.build.outputs.status == 'success'

      with:

        path: ${{ env.FILEPATH }}/

    - name: 上传 Armbian 镜像到 Release

      uses: softprops/action-gh-release@v1

      if: steps.build.outputs.status == 'success'

      env:

        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      with:

        tag_name: Armbian-trunk_Chainedbox_5.15.y_${{ env.FILE_DATE }}

        files: ${{ env.FILEPATH }}/*

        body: |

            我家云 Armbian 固件

            * 固件信息

            默认用户名: root

            默认密码: 1234

    - name: 删除旧版本

      uses: dev-drprasad/delete-older-releases@master

      if: env.DELETE_RELEASE == 'true'

      with:

        keep_latest: ${{ env.KEEP_MININUM_RELEASE }}

        delete_tags: true

      env:

        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 删除旧的工作流运行和工件

      uses: Mattraks/delete-workflow-runs@main

      if: env.DELETE_ARTIFACTS == 'true'

      with:

        token: ${{ secrets.GITHUB_TOKEN }}

        repository: ${{ github.repository }}

        retain_days: ${{ env.KEEP_DAY }}

        keep_minimum_runs: ${{ env.KEEP_MININUM_RUNS }}

          

